/* Base */
/* Fonts */
/* Color palette */
/* Grid */
/* Breakpoints */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  border-style: none;
  outline: none;
  font: inherit;
  vertical-align: baseline;
  font-family: "Open Sans", Arial, Helvetica, sans-serif;
  font-weight: 300; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1;
  font-size: 62.5%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  overflow-x: hidden; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

h1, h2, h3 {
  margin: 0;
  padding: 0;
  font-weight: bold; }

a {
  text-decoration: none; }

iframe {
  max-width: 100%; }

ul {
  margin: 0; }
  ul li {
    list-style-type: none; }

strong, b {
  font-weight: bold; }

em, i {
  font-style: italic; }

input {
  border: none; }

button {
  background: none;
  border: none;
  padding: 0;
  margin: 0; }

:focus {
  outline-style: none;
  box-shadow: none;
  border-color: transparent; }

/* Helpers */
/* Components */
/* Layouts */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
